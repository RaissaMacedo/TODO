{"ast":null,"code":"var _jsxFileName = \"/home/raissa/Documentos/Projetos-dev/react-typescript/lista-tarefas/todo/src/components/AddArea/index.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport * as C from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddArea = _ref => {\n  _s();\n  let {\n    onEnter\n  } = _ref;\n  const [inputText, setInputText] = useState('');\n  // saber qual tecla clicou: keyboardevent\n  const handleKeyUp = e => {\n    if (e.code === 'Enter' && inputText !== '') {// se a tecla q clicou é enter e inputText nao é vazio:\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(C.Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image\",\n      children: \"\\u271A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Adicione uma tarefa\",\n      value: inputText,\n      onChange: e => setInputText(e.target.value),\n      onKeyUp: handleKeyUp // evento quando digitar algo e soltar, vai rodar a funcao\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(AddArea, \"wAh2Cv8Kk70PfbjrJimBRYwxb6g=\");\n_c = AddArea;\nvar _c;\n$RefreshReg$(_c, \"AddArea\");","map":{"version":3,"names":["useState","C","AddArea","onEnter","inputText","setInputText","handleKeyUp","e","code","target","value"],"sources":["/home/raissa/Documentos/Projetos-dev/react-typescript/lista-tarefas/todo/src/components/AddArea/index.tsx"],"sourcesContent":["import { useState, KeyboardEvent } from 'react'\nimport * as C from './styles'\ntype Props = {\n  onEnter: (taskName: string) => void // é uma funcao q nao retorna nada e tem como paramentro taskname\n}\nexport const AddArea = ({ onEnter}: Props) => {\n  const [inputText, setInputText] = useState('');\n  // saber qual tecla clicou: keyboardevent\n  const handleKeyUp = (e: KeyboardEvent)  => {\n    if( e.code === 'Enter'&& inputText !== ''){ // se a tecla q clicou é enter e inputText nao é vazio:\n\n    }\n  }\n  return (\n    <C.Container>\n      <div className=\"image\">✚</div>\n      <input \n      type=\"text\"\n      placeholder=\"Adicione uma tarefa\"\n      value={inputText}\n      onChange={e=>setInputText(e.target.value)}\n      onKeyUp={handleKeyUp} // evento quando digitar algo e soltar, vai rodar a funcao\n      />\n    </C.Container>\n  )\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAuB,OAAO;AAC/C,OAAO,KAAKC,CAAC,MAAM,UAAU;AAAA;AAI7B,OAAO,MAAMC,OAAO,GAAG,QAAuB;EAAA;EAAA,IAAtB;IAAEC;EAAc,CAAC;EACvC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC9C;EACA,MAAMM,WAAW,GAAIC,CAAgB,IAAM;IACzC,IAAIA,CAAC,CAACC,IAAI,KAAK,OAAO,IAAGJ,SAAS,KAAK,EAAE,EAAC,CAAE;IAAA;EAG9C,CAAC;EACD,oBACE,QAAC,CAAC,CAAC,SAAS;IAAA,wBACV;MAAK,SAAS,EAAC,OAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAQ,eAC9B;MACA,IAAI,EAAC,MAAM;MACX,WAAW,EAAC,qBAAqB;MACjC,KAAK,EAAEA,SAAU;MACjB,QAAQ,EAAEG,CAAC,IAAEF,YAAY,CAACE,CAAC,CAACE,MAAM,CAACC,KAAK,CAAE;MAC1C,OAAO,EAAEJ,WAAY,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QACpB;EAAA;IAAA;IAAA;IAAA;EAAA,QACU;AAElB,CAAC;AAAA,GApBYJ,OAAO;AAAA,KAAPA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}