{"ast":null,"code":"var _jsxFileName = \"/home/raissa/Documentos/Projetos-dev/react-typescript/lista-tarefas/todo/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport * as C from './App.styles';\nimport { ListItem } from './components/ListItem';\nimport { AddArea } from './components/AddArea';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [list, setList] = useState([{\n    id: 1,\n    name: 'Ir ao sacolão',\n    done: false\n  },\n  // objeto\n  {\n    id: 2,\n    name: 'Ir ao mercado',\n    done: true\n  }]); // typescript consegue definir os padroes de valores\n\n  const handleAddTask = taskName => {\n    //quando o cara da enter:\n    let newList = [...list]; // adicionar texto na lista\n    newList.push({\n      id: list.length + 1,\n      //adicionando o id do novo item\n      name: taskName,\n      done: false\n    });\n    setList(newList); //atualizou na lista nova\n  };\n\n  const handleTaskChange = (id, done) => {\n    let newList = [...list];\n    for (let i in newList) {\n      if (newList[i].id === id) {\n        newList[i].done = done;\n      }\n    }\n    setList(newList);\n  };\n  return /*#__PURE__*/_jsxDEV(C.Container, {\n    children: /*#__PURE__*/_jsxDEV(C.Area, {\n      children: [/*#__PURE__*/_jsxDEV(C.Header, {\n        children: \"Lista de Tarefas \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddArea, {\n        onEnter: handleAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), list.map((item, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        item: item,\n        onChange: handleTaskChange\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"zZhk2tMEXbVBwaGvT04qYYX1LtQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","C","ListItem","AddArea","App","list","setList","id","name","done","handleAddTask","taskName","newList","push","length","handleTaskChange","i","map","item","index"],"sources":["/home/raissa/Documentos/Projetos-dev/react-typescript/lista-tarefas/todo/src/App.tsx"],"sourcesContent":["import  { useState } from 'react'\nimport * as C from './App.styles'\nimport { Item } from './types/Item'\nimport { ListItem} from './components/ListItem'\nimport { AddArea } from './components/AddArea'\nconst App = () => {\n  const [list, setList] = useState<Item[]>([\n    {id: 1, name: 'Ir ao sacolão', done: false }, // objeto\n    {id: 2, name: 'Ir ao mercado', done: true } \n  ]) // typescript consegue definir os padroes de valores\n\n  const handleAddTask = (taskName: string) => { //quando o cara da enter:\n    let newList = [...list]; // adicionar texto na lista\n    newList.push({\n      id: list.length + 1, //adicionando o id do novo item\n      name: taskName,\n      done: false\n    })\n    setList(newList) //atualizou na lista nova\n  }\n\n  const handleTaskChange = (id: number, done: boolean) => {\n    let newList = [...list];\n    for(let i in newList ){\n      if(newList[i].id === id) {\n        newList[i].done = done\n      }\n    }\n    setList(newList)\n  }\n\n  return (\n    <C.Container>\n      <C.Area>\n        <C.Header>Lista de Tarefas </C.Header>\n       \n        <AddArea onEnter={handleAddTask}/>\n\n        {list.map((item, index)=> (\n          <ListItem key={index} item={item} onChange={handleTaskChange}/>\n        ))}\n      </C.Area>\n    </C.Container>\n  );\n}\nexport default App;"],"mappings":";;AAAA,SAAUA,QAAQ,QAAQ,OAAO;AACjC,OAAO,KAAKC,CAAC,MAAM,cAAc;AAEjC,SAASC,QAAQ,QAAO,uBAAuB;AAC/C,SAASC,OAAO,QAAQ,sBAAsB;AAAA;AAC9C,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAS,CACvC;IAACO,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,eAAe;IAAEC,IAAI,EAAE;EAAM,CAAC;EAAE;EAC9C;IAACF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,eAAe;IAAEC,IAAI,EAAE;EAAK,CAAC,CAC5C,CAAC,EAAC;;EAEH,MAAMC,aAAa,GAAIC,QAAgB,IAAK;IAAE;IAC5C,IAAIC,OAAO,GAAG,CAAC,GAAGP,IAAI,CAAC,CAAC,CAAC;IACzBO,OAAO,CAACC,IAAI,CAAC;MACXN,EAAE,EAAEF,IAAI,CAACS,MAAM,GAAG,CAAC;MAAE;MACrBN,IAAI,EAAEG,QAAQ;MACdF,IAAI,EAAE;IACR,CAAC,CAAC;IACFH,OAAO,CAACM,OAAO,CAAC,EAAC;EACnB,CAAC;;EAED,MAAMG,gBAAgB,GAAG,CAACR,EAAU,EAAEE,IAAa,KAAK;IACtD,IAAIG,OAAO,GAAG,CAAC,GAAGP,IAAI,CAAC;IACvB,KAAI,IAAIW,CAAC,IAAIJ,OAAO,EAAE;MACpB,IAAGA,OAAO,CAACI,CAAC,CAAC,CAACT,EAAE,KAAKA,EAAE,EAAE;QACvBK,OAAO,CAACI,CAAC,CAAC,CAACP,IAAI,GAAGA,IAAI;MACxB;IACF;IACAH,OAAO,CAACM,OAAO,CAAC;EAClB,CAAC;EAED,oBACE,QAAC,CAAC,CAAC,SAAS;IAAA,uBACV,QAAC,CAAC,CAAC,IAAI;MAAA,wBACL,QAAC,CAAC,CAAC,MAAM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA6B,eAEtC,QAAC,OAAO;QAAC,OAAO,EAAEF;MAAc;QAAA;QAAA;QAAA;MAAA,QAAE,EAEjCL,IAAI,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpB,QAAC,QAAQ;QAAa,IAAI,EAAED,IAAK;QAAC,QAAQ,EAAEH;MAAiB,GAA9CI,KAAK;QAAA;QAAA;QAAA;MAAA,QACrB,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA;EACK;IAAA;IAAA;IAAA;EAAA,QACG;AAElB,CAAC;AAAA,GAvCKf,GAAG;AAAA,KAAHA,GAAG;AAwCT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}